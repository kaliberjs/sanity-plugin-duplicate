{"version":3,"sources":["../src/DocumentActionDuplicate.js"],"names":["client","sanityClient","withConfig","apiVersion","DocumentActionDuplicate","type","published","draft","router","i18n","pluginConfig","language","React","useState","isDuplicating","setDuplicating","icon","CopyIcon","disabled","label","title","onHandle","currentDoc","_id","_createdAt","_updatedAt","currentContent","replacementFunctions","getReplacementFunctions","schema","get","replacementData","Object","fromEntries","entries","map","fieldName","replacement","doc","created","create","navigateIntent","id","fields","filter","x","undefined","includes","kaliberOptions","duplicate","field","name"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,gBAAaC,UAAb,CAAwB;AACrCC,EAAAA,UAAU,EAAE;AADyB,CAAxB,CAAf;;AAIO,SAASC,uBAAT,OAA6D;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AAAA,MAATC,KAAS,QAATA,KAAS;AAClE,MAAMC,MAAM,GAAG,wBAAf;AACA,MAAMC,IAAI,GAAG,gBAAQC,+BAAaC,QAArB,CAAb;;AACA,wBAAwCC,eAAMC,QAAN,CAAe,KAAf,CAAxC;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,cAAtB;;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEC,eADD;AAELC,IAAAA,QAAQ,EAAEJ,aAFL;AAGLK,IAAAA,KAAK,EAAEL,aAAa,GAAG,cAAH,GAAoB,WAHnC;AAILM,IAAAA,KAAK,EAAEX,IAAI,CAAC,WAAD,CAJN;AAKLY,IAAAA,QAAQ;AAAA,wCAAE,aAAY;AACpBN,QAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMO,UAAU,GAAGf,KAAK,IAAID,SAA5B;AACA,YAAI,CAACgB,UAAL,EAAiB;;AAEjB,YAAQC,GAAR,GAA2DD,UAA3D,CAAQC,GAAR;AAAA,YAAaC,UAAb,GAA2DF,UAA3D,CAAaE,UAAb;AAAA,YAAyBC,UAAzB,GAA2DH,UAA3D,CAAyBG,UAAzB;AAAA,YAAwCC,cAAxC,4BAA2DJ,UAA3D;;AACA,YAAMK,oBAAoB,GAAGC,uBAAuB,CAACC,gBAAOC,GAAP,CAAWzB,IAAX,CAAD,CAApD;AACA,YAAM0B,eAAe,GAAGC,MAAM,CAACC,WAAP,CACtBD,MAAM,CAACE,OAAP,CAAeP,oBAAoB,IAAI,EAAvC,EACGQ,GADH,CACO;AAAA;AAAA,cAAEC,SAAF;AAAA,cAAaC,WAAb;;AAAA,iBACH,CAACD,SAAD,EAAY,OAAOC,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,CAACX,cAAc,CAACU,SAAD,CAAf,CAA/C,GAA6EC,WAAzF,CADG;AAAA,SADP,CADsB,CAAxB;;AAOA,YAAMC,GAAG,iDAAQZ,cAAR,GAA2BK,eAA3B;AAA4CR,UAAAA,GAAG,EAAE;AAAjD,UAAT;;AACA,YAAMgB,OAAO,SAASvC,MAAM,CAACwC,MAAP,CAAcF,GAAd,CAAtB;AACA9B,QAAAA,MAAM,CAACiC,cAAP,CAAsB,MAAtB,EAA8B;AAAEC,UAAAA,EAAE,EAAEH,OAAO,CAAChB,GAAd;AAAmBlB,UAAAA;AAAnB,SAA9B;AACAU,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAlBO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALH,GAAP;AAyBD;;AAGD,SAASa,uBAAT,CAAiCC,MAAjC,EAAyC;AACvC,SAAOG,MAAM,CAACC,WAAP,CAAmBJ,MAAM,CAACc,MAAP,CACvBC,MADuB,CAChBC,CAAC;AAAA;;AAAA,WAAI,CAAC,CAACC,SAAD,EAAY,IAAZ,EAAkBC,QAAlB,0BAA2BF,CAAC,CAACxC,IAAF,CAAO2C,cAAlC,0DAA2B,sBAAuBC,SAAlD,CAAL;AAAA,GADe,EAEvBd,GAFuB,CAEnBe,KAAK,IAAI,CAACA,KAAK,CAACC,IAAP,EAAaD,KAAK,CAAC7C,IAAN,CAAW2C,cAAX,CAA0BC,SAAvC,CAFU,CAAnB,CAAP;AAGD","sourcesContent":["import sanityClient from 'part:@sanity/base/client'\nimport { CopyIcon } from '@sanity/icons'\nimport { i18n as getI18n } from './i18n'\nimport { useRouter } from '@sanity/base/router'\nimport pluginConfig from 'config:@kaliber/sanity-plugin-duplicate'\nimport schema from 'part:@sanity/base/schema'\nimport React from 'react'\n\nconst client = sanityClient.withConfig({\n  apiVersion: '2022-04-06'\n})\n\nexport function DocumentActionDuplicate({ type, published, draft }) {\n  const router = useRouter()\n  const i18n = getI18n(pluginConfig.language)\n  const [isDuplicating, setDuplicating] = React.useState(false)\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating,\n    label: isDuplicating ? 'Duplicatingâ€¦' : 'Duplicate',\n    title: i18n['duplicate'],\n    onHandle: async () => {\n      setDuplicating(true)\n      const currentDoc = draft || published\n      if (!currentDoc) return\n      \n      const { _id, _createdAt, _updatedAt, ...currentContent } = currentDoc\n      const replacementFunctions = getReplacementFunctions(schema.get(type))\n      const replacementData = Object.fromEntries(\n        Object.entries(replacementFunctions || [])\n          .map(([fieldName, replacement]) =>\n            [fieldName, typeof replacement === 'function' ? replacement(currentContent[fieldName]) : replacement]\n          )\n      )\n\n      const doc = { ...currentContent, ...replacementData, _id: 'drafts.' }\n      const created = await client.create(doc)\n      router.navigateIntent('edit', { id: created._id, type })\n      setDuplicating(false)\n    },\n  }\n}\n\n\nfunction getReplacementFunctions(schema) {\n  return Object.fromEntries(schema.fields\n    .filter(x => ![undefined, null].includes(x.type.kaliberOptions?.duplicate))\n    .map(field => [field.name, field.type.kaliberOptions.duplicate]))\n}\n"],"file":"DocumentActionDuplicate.js"}